package com.emx.platform.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.emx.platform.common.DictionaryContext;
import com.emx.platform.common.ResultEnum;
import com.emx.platform.domain.Equipment;
import com.emx.platform.domain.Merchants;
import com.emx.platform.params.MerchantsListParam;
import com.emx.platform.params.ParamId;
import com.emx.platform.service.MerchantsService;
import com.emx.platform.utils.Result;
import com.emx.platform.utils.ResultUtil;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@CrossOrigin("*")
@RestController
@RequestMapping("/merchants")
@Api(value="商家接口相关",tags={"商家接口相关"})
public class MerchantsController {
	
	@Autowired private MerchantsService merchantsService;

	@SuppressWarnings("unchecked")
	@ApiOperation(value = "查询所有设备")
	@PostMapping(value = "/Equipmentlist")
	public Result<Merchants> list(@RequestBody MerchantsListParam param) {
		try {
			
			return ResultUtil.success(merchantsService.merchantslist(param));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "添加商家")
	@PostMapping(value = "/addEquipment")
	public Result<Integer> addEquipment(@RequestBody Merchants merchants) {
		try {
			
			return ResultUtil.success(merchantsService.addEquipment(merchants));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "修改商家状态为禁用")
	@PostMapping(value = "/updateMerchantsStatStop")
	public Result<Integer> updateToStop(@RequestBody ParamId paramId) {
		try {
			
			return ResultUtil.success(merchantsService.updateStat(paramId.getIdString(), DictionaryContext.STAT_STOP));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "修改商家状态为启用")
	@PostMapping(value = "/updateMerchantsStatEnable")
	public Result<Integer> updateToEnable(@RequestBody ParamId paramId) {
		try {
			
			return ResultUtil.success(merchantsService.updateStat(paramId.getIdString(), DictionaryContext.STAT_ENABLE));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "根据id查询商家详情")
	@PostMapping(value = "/selectInfoByMerchantsId")
	public Result<Merchants> selectInfoById(@RequestBody ParamId paramId) {
		try {
			
			return ResultUtil.success(merchantsService.selectInfoById(paramId.getIdString()));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "根据id查询设备详情")
	@PostMapping(value = "/selectEquipmentById")
	public Result<Integer> updateInfoByid(@RequestBody Merchants merchants) {
		try {
			
			return ResultUtil.success(merchantsService.updateInfoByid(merchants));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
}
