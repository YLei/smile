<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emx.platform.dao.EquipmentMapper">
	<resultMap id="BaseResultMap"
		type="com.emx.platform.domain.Equipment">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="serial_no" property="serialNo"
			jdbcType="VARCHAR" />
		<result column="device_no" property="deviceNo"
			jdbcType="VARCHAR" />
		<result column="device_type" property="deviceType"
			jdbcType="VARCHAR" />
		<result column="stat" property="stat" jdbcType="VARCHAR" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime"
			jdbcType="TIMESTAMP" />
		<result column="operator" property="operator"
			jdbcType="VARCHAR" />
		<result column="operate_time" property="operateTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, serial_no, device_no, device_type, stat,creator,
		create_time,
		operator,
		operate_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from equipment
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		equipment
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert"
		parameterType="com.emx.platform.domain.Equipment">
		insert into equipment (id, serial_no, device_no,
		device_type, stat)
		values (#{id,jdbcType=VARCHAR},
		#{serialNo,jdbcType=VARCHAR},
		#{deviceNo,jdbcType=VARCHAR},
		#{deviceType,jdbcType=VARCHAR}, #{stat,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.emx.platform.domain.Equipment">
		insert into equipment
		<trim prefix="(" suffix=")" suffixOverrides=",">
				id,
			<if test="serialNo != null">
				serial_no,
			</if>
			<if test="deviceNo != null">
				device_no,
			</if>
			<if test="deviceType != null">
				device_type,
			</if>
			<if test="stat != null">
				stat,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="operator != null">
				operator,
			</if>
			<if test="operateTime != null">
				operate_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			(select replace(uuid(),'-','') from dual),
			<if test="serialNo != null">
				#{serialNo,jdbcType=VARCHAR},
			</if>
			<if test="deviceNo != null">
				#{deviceNo,jdbcType=VARCHAR},
			</if>
			<if test="deviceType != null">
				#{deviceType,jdbcType=VARCHAR},
			</if>
			<if test="stat != null">
				#{stat,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operator != null">
				#{operator,jdbcType=VARCHAR},
			</if>
			<if test="operateTime != null">
				#{operateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.emx.platform.domain.Equipment">
		update equipment
		<set>
			<if test="serialNo != null">
				serial_no = #{serialNo,jdbcType=VARCHAR},
			</if>
			<if test="deviceNo != null">
				device_no = #{deviceNo,jdbcType=VARCHAR},
			</if>
			<if test="deviceType != null">
				device_type = #{deviceType,jdbcType=VARCHAR},
			</if>
			<if test="stat != null">
				stat = #{stat,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="operator != null">
				operator = #{operator,jdbcType=VARCHAR},
			</if>
			<if test="operateTime != null">
				operate_time = #{operateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.emx.platform.domain.Equipment">
		update equipment
		set serial_no =
		#{serialNo,jdbcType=VARCHAR},
		device_no = #{deviceNo,jdbcType=VARCHAR},
		device_type = #{deviceType,jdbcType=VARCHAR},
		stat =
		#{stat,jdbcType=VARCHAR},
		creator = #{creator,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		operator =
		#{operator,jdbcType=VARCHAR},
		operate_time =
		#{operateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="list" resultType="com.emx.platform.domain.Equipment">
		select qui.id, qui.serial_no serialNo,
		qui.device_no deviceNo, sd.mean deviceType, qui.stat,
		u1.real_name creator, qui.create_time createTime, u2.real_name operator, qui.operate_time operateTime
		from equipment qui
		left join sys_dictionary sd on sd.m_code=qui.device_type and
		sd.code='DEVICETYPE'
		left join sys_user u1 on u1.id=qui.creator
		left join sys_user u2 on u2.id=qui.operator
		<where>
			<if test="deviceType != null and deviceType != 0 ">
				and device_type=#{deviceType}
			</if>
			<if test="serialNo != null and serialNo != '' ">
				and locate(#{serialNo},serial_no)>0
			</if>
			<if test="deviceNo != null and deviceNo != '' ">
				or locate(#{deviceNo},device_no)>0
			</if>
		</where>
		order by qui.create_time desc
	</select>

	<update id="updateStat" parameterType="java.lang.String">
		update equipment
		set stat =
		#{stat}
		where id=#{id}
	</update>
	
	
	<select id="selectInfoById" resultType="com.emx.platform.domain.Equipment">
		select qui.id, qui.serial_no serialNo,
		qui.device_no deviceNo, sd.mean deviceType, qui.stat,
		u1.real_name creator, qui.create_time createTime, u2.real_name operator, qui.operate_time operateTime
		from equipment qui
		left join sys_dictionary sd on sd.m_code=qui.device_type and
		sd.code='DEVICETYPE'
		left join sys_user u1 on u1.id=qui.creator
		left join sys_user u2 on u2.id=qui.operator
		where qui.id=#{id}
	</select>
</mapper>