package com.emx.platform.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.emx.platform.common.DictionaryContext;
import com.emx.platform.common.ResultEnum;
import com.emx.platform.domain.Equipment;
import com.emx.platform.domain.SysAuthority;
import com.emx.platform.params.EquipmentListParam;
import com.emx.platform.params.ParamId;
import com.emx.platform.service.EquipmentService;
import com.emx.platform.utils.Result;
import com.emx.platform.utils.ResultUtil;
import com.emx.platform.utils.StringUtil;
import com.emx.platform.vo.AuthorityListVo;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@CrossOrigin("*")
@RestController
@RequestMapping("/equipment")
@Api(value="设备接口相关",tags={"设备接口相关"})
public class EquipmentController {
	
	@Autowired private EquipmentService equipmentService;

	@SuppressWarnings("unchecked")
	@ApiOperation(value = "查询所有设备")
	@PostMapping(value = "/Equipmentlist")
	public Result<Equipment> list(@RequestBody EquipmentListParam param) {
		try {
			
			return ResultUtil.success(equipmentService.list(param));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "添加设备")
	@PostMapping(value = "/addEquipment")
	public Result<Integer> addEquipment(@RequestBody Equipment equipment) {
		try {
			
			return ResultUtil.success(equipmentService.addEquipment(equipment));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "修改设备状态为禁用")
	@PostMapping(value = "/updateEquipmentStatToStop")
	public Result<Integer> updateToStop(@RequestBody ParamId paramId) {
		try {
			
			return ResultUtil.success(equipmentService.updateStat(paramId.getIdString(), DictionaryContext.STAT_STOP));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "修改设备状态为启用")
	@PostMapping(value = "/updateEquipmentStatToEnable")
	public Result<Integer> updateToEnable(@RequestBody ParamId paramId) {
		try {
			
			return ResultUtil.success(equipmentService.updateStat(paramId.getIdString(), DictionaryContext.STAT_ENABLE));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "根据id查询设备详情")
	@PostMapping(value = "/selectEquipmentById")
	public Result<HashMap<String, Object>> selectInfoById(@RequestBody ParamId paramId) {
		try {
			HashMap<String, Object> map = new HashMap<String, Object>();
			map.put("equipmentList", equipmentService.selectInfoById(paramId.getIdString()));
			
			return ResultUtil.success(map);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
	
	@SuppressWarnings("unchecked")
	@ApiOperation(value = "根据id修改设备详情")
	@PostMapping(value = "/updateEquipmentInofById")
	public Result<Integer> updateInfoByid(@RequestBody Equipment equipment) {
		try {
			
			return ResultUtil.success(equipmentService.updateInfoByid(equipment));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		return ResultUtil.error(ResultEnum.ERROR.getCode(), ResultEnum.ERROR.getMsg());
	}
}
